object_selection:
  muons:
    field: events.Muon
    cuts:
      - events.Muon.pt > 10
      - np.abs(events.Muon.eta) < 2.4
      - working_points.muons_iso(events, 'tight')
      - working_points.muons_id(events, 'tight')
  electrons:
    field: events.Electron
    cuts:
      - events.Electron.pt > 10
      - (np.abs(events.Electron.eta) < 2.4) & ((np.abs(events.Electron.eta) < 1.44) | (np.abs(events.Electron.eta) > 1.57))
      - working_points.electrons_id(events, 'wp80iso')
      - delta_r_mask(events.Electron, objects['muons'], 0.4)
  taus:
    field: events.Tau
    cuts:
      - events.Tau.pt > 20
      - np.abs(events.Tau.eta) < 2.3
      - np.abs(events.Tau.dz) < 0.2
      - working_points.taus_vs_jet(events, 'loose')
      - working_points.taus_vs_ele(events, 'vvloose')
      - working_points.taus_vs_mu(events, 'loose')
      - working_points.taus_decaymode(events, '13')
      - delta_r_mask(events.Tau, objects['electrons'], 0.3)
      - delta_r_mask(events.Tau, objects['muons'], 0.3)
  jets:
    field: events.Jet
    cuts:
      - events.Jet.pt > 30
      - np.abs(events.Jet.eta) < 4.7
      - working_points.jets_id(events, 'tightlepveto')
      - working_points.jets_pileup_id(events, 'tight', year)
      - delta_r_mask(events.Jet, objects['electrons'], 0.4)
      - delta_r_mask(events.Jet, objects['muons'], 0.4)
      - delta_r_mask(events.Jet, objects['taus'], 0.4)
  dimuons:
    field: select_dimuons
    cuts:
      - objects['dimuons'].l1.delta_r(objects['dimuons'].l2) > 0.3
      - objects['dimuons'].l1.charge * objects['dimuons'].l2.charge < 0
      - (objects['dimuons'].p4.mass > 60.0) & (objects['dimuons'].p4.mass < 120.0)
  met:
    field: events.MET
event_selection:
  hlt_paths:
    - IsoMu27
  selections:
    trigger: get_trigger_mask(events, hlt_paths)
    trigger_match: get_trigger_match_mask(events, hlt_paths, 'Muon')
    lumi: get_lumi_mask(events, year)
    goodvertex: events.PV.npvsGood > 0
    dy_stitching: get_stitching_mask(events, dataset, 'DYJetsToLL_inclusive', 70)
    two_muons: ak.num(objects['muons']) == 2
    one_dimuon: ak.num(objects['dimuons']) == 1
    leading_muon_pt: ak.fill_none(ak.firsts(objects['dimuons'].l1.pt) > 30, False)
    subleading_muon_pt: ak.fill_none(ak.firsts(objects['dimuons'].l2.pt) > 15, False)
    electron_veto: ak.num(objects['electrons']) == 0
    tau_veto: ak.num(objects['taus']) == 0
  categories:
    base:
      - trigger
      - trigger_match
      - lumi
      - goodvertex
      - dy_stitching
      - two_muons
      - one_dimuon
      - leading_muon_pt
      - subleading_muon_pt
      - electron_veto
      - tau_veto
corrections:
  objects:
    - jets
    - muons
    - met
    - jets_veto
  event_weights:
    genWeight: true
    pileupWeight: true
    l1prefiring: true
    pujetid:
      - id: tight
    btagging: false
    electron:
      - id: false
      - reco: false
    muon:
      - id: tight
      - iso: tight
      - reco: true
      - trigger: true
histogram_config:
  add_syst_axis: true
  add_weight: true
  axes:
    dimuon_mass:
      type: Regular
      bins: 24
      start: 60
      stop: 120
      label: $m(\mu\mu)$ [GeV]
      expression: objects['dimuons'].p4.mass
    dimuon_pt:
      type: Regular
      bins: 50
      start: 30
      stop: 300
      label: $p_T(\mu\mu)$ [GeV]
      expression: objects['dimuons'].p4.pt
    dimuon_dr:
      type: Regular
      bins: 50
      start: 0
      stop: 5
      label: $\Delta R(\mu_1, \mu_2)$
      expression: objects['dimuons'].l1.delta_r(objects['dimuons'].l2)
    dimuon_deta:
      type: Regular
      bins: 50
      start: 0
      stop: 5
      label: $|\Delta \eta(\mu_1, \mu_2)|$
      expression: np.abs(objects['dimuons'].l1.eta - objects['dimuons'].l2.eta)
    muon_pt:
      type: Regular
      bins: 50
      start: 30
      stop: 300
      label: $p_T(\mu)$ [GeV]
      expression: objects['muons'].pt
    muon_eta:
      type: Regular
      bins: 50
      start: -2.5
      stop: 2.5
      label: $\eta(\mu)$
      expression: objects['muons'].eta
    muon_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(\mu)$
      expression: objects['muons'].phi
    jet_pt:
      type: Regular
      bins: 50
      start: 20
      stop: 500
      label: $p_T(j)$ [GeV]
      expression: objects['jets'].pt
    jet_eta:
      type: Regular
      bins: 50
      start: -2.4
      stop: 2.4
      label: $\eta(j)$
      expression: objects['jets'].eta
    jet_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(j)$
      expression: objects['jets'].phi
    jet_multiplicity:
      type: Integer
      start: 0
      stop: 14
      label: $N(j)$
      expression: ak.num(objects['jets'])
    met:
      type: Variable
      edges:
        - 0
        - 10
        - 20
        - 30
        - 40
        - 50
        - 60
        - 70
        - 80
        - 90
        - 100
        - 110
        - 120
        - 140
        - 160
        - 170
        - 180
        - 190
        - 200
        - 210
        - 220
        - 230
        - 240
        - 250
        - 260
        - 270
        - 280
        - 290
        - 300
        - 320
        - 340
        - 360
        - 380
        - 400
        - 450
        - 500
        - 1000
      label: $p_T^{miss}$ [GeV]
      expression: objects['met'].pt
    npvs:
      type: Integer
      start: 0
      stop: 60
      label: npvs
      expression: events.PV.npvsGood
  layout:
    muons:
      - muon_pt
      - muon_eta
      - muon_phi
    dimuons:
      - dimuon_pt
      - dimuon_mass
    jets:
      - jet_pt
      - jet_eta
      - jet_phi
    njets:
      - jet_multiplicity
    met:
      - met
    vertex:
      - npvs