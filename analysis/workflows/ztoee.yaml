object_selection:
  electrons:
    field: events.Electron
    cuts:
      - events.Electron.pt > 10
      - np.abs(events.Electron.eta) < 2.1
      - working_points.electrons_id(events, 'wp80iso')
  muons:
    field: events.Muon
    cuts:
      - events.Muon.pt > 10
      - np.abs(events.Muon.eta) < 2.4
      - working_points.muons_iso(events, 'tight')
      - working_points.muons_id(events, 'tight')
      - delta_r_mask(events.Muon, objects['electrons'], 0.4)
  taus:
    field: events.Tau
    cuts:
      - events.Tau.pt > 20
      - np.abs(events.Tau.eta) < 2.3
      - np.abs(events.Tau.dz) < 0.2
      - working_points.taus_vs_jet(events, 'loose')
      - working_points.taus_vs_ele(events, 'vvloose')
      - working_points.taus_vs_mu(events, 'loose')
      - working_points.taus_decaymode(events, '13')
      - delta_r_mask(events.Tau, objects['electrons'], 0.3)
      - delta_r_mask(events.Tau, objects['muons'], 0.3)
  jets:
    field: events.Jet
    cuts:
      - events.Jet.pt > 30
      - np.abs(events.Jet.eta) < 4.7
      - working_points.jets_id(events, 'tightlepveto')
      - working_points.jets_pileup_id(events, 'tight', year)
      - delta_r_mask(events.Jet, objects['electrons'], 0.4)
      - delta_r_mask(events.Jet, objects['muons'], 0.4)
      - delta_r_mask(events.Jet, objects['taus'], 0.4)
  dielectrons:
    field: select_dielectrons
    cuts:
      - objects['dielectrons'].l1.delta_r(objects['dielectrons'].l2) > 0.3
      - objects['dielectrons'].l1.charge * objects['dielectrons'].l2.charge < 0
      - (objects['dielectrons'].p4.mass > 60.0) &
        (objects['dielectrons'].p4.mass < 120.0)
  met:
    field: events.MET
event_selection:
  hlt_paths:
    - Ele35_WPTight_Gsf
    - Photon200
  selections:
    goodvertex: events.PV.npvsGood > 0
    lumi: get_lumi_mask(events, year)
    trigger: get_trigger_mask(events, hlt_paths)
    trigger_match: get_trigger_match_mask(events, hlt_paths, 'Electron')
    two_electrons: ak.num(objects['electrons']) == 2
    leading_electron_pt: ak.fill_none(ak.firsts(objects['dielectrons'].l1.pt) > 38, False)
    subleading_electron_pt: ak.fill_none(ak.firsts(objects['dielectrons'].l2.pt) > 20, False)
    one_dielectron: ak.num(objects['dielectrons']) == 1
    muon_veto: ak.num(objects['muons']) == 0
    tau_veto: ak.num(objects['taus']) == 0
  categories:
    base:
      - goodvertex
      - lumi
      - trigger
      - trigger_match
      - two_electrons
      - leading_electron_pt
      - subleading_electron_pt
      - one_dielectron
      - muon_veto
      - tau_veto
corrections:
  objects:
    - jets
    - muons
    - met
    - jets_veto
  event_weights:
    genWeight: true
    pileupWeight: true
    l1prefiring: true
    pujetid:
      - id: tight
    btagging: false
    electron:
      - id: wp80iso
      - reco: true
    muon:
      - id: false
      - iso: false
      - reco: false
      - trigger: false
histogram_config:
  add_syst_axis: true
  add_weight: true
  axes:
    dielectron_mass:
      type: Regular
      bins: 24
      start: 60
      stop: 120
      label: $m(ee)$ [GeV]
      expression: objects['dielectrons'].p4.mass
    dielectron_pt:
      type: Regular
      bins: 50
      start: 30
      stop: 300
      label: $p_T(ee)$ [GeV]
      expression: objects['dielectrons'].p4.pt
    dielectron_dr:
      type: Regular
      bins: 50
      start: 0
      stop: 5
      label: $\Delta R(e_1, e_2)$
      expression: objects['dielectrons'].l1.delta_r(objects['dielectrons'].l2)
    dielectron_deta:
      type: Regular
      bins: 50
      start: 0
      stop: 5
      label: $|\Delta \eta(e_1, e_2)|$
      expression: np.abs(objects['dielectrons'].l1.eta - objects['dielectrons'].l2.eta)
    leading_electron_pt:
      type: Regular
      bins: 50
      start: 30
      stop: 300
      label: $p_T(e_1)$ [GeV]
      expression: objects['dielectrons'].l1.pt
    subleading_electron_pt:
      type: Regular
      bins: 50
      start: 30
      stop: 300
      label: $p_T(e_2)$ [GeV]
      expression: objects['dielectrons'].l2.pt
    leading_electron_eta:
      type: Regular
      bins: 50
      start: -2.5
      stop: 2.5
      label: $\eta(e_1)$
      expression: objects['dielectrons'].l1.eta
    subleading_electron_eta:
      type: Regular
      bins: 50
      start: -2.5
      stop: 2.5
      label: $\eta(e_2)$
      expression: objects['dielectrons'].l2.eta
    electron_pt:
      type: Regular
      bins: 50
      start: 30
      stop: 300
      label: $p_T(e)$ [GeV]
      expression: objects['electrons'].pt
    electron_eta:
      type: Regular
      bins: 50
      start: -2.5
      stop: 2.5
      label: $\eta(e)$
      expression: objects['electrons'].eta
    electron_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(e)$
      expression: objects['electrons'].phi
    jet_pt:
      type: Regular
      bins: 50
      start: 20
      stop: 500
      label: $p_T(j)$ [GeV]
      expression: objects['jets'].pt
    jet_eta:
      type: Regular
      bins: 50
      start: -2.4
      stop: 2.4
      label: $\eta(j)$
      expression: objects['jets'].eta
    jet_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(j)$
      expression: objects['jets'].phi
    jet_multiplicity:
      type: Integer
      start: 0
      stop: 14
      label: $N(j)$
      expression: ak.num(objects['jets'])
    met:
      type: Variable
      edges:
        - 0
        - 10
        - 20
        - 30
        - 40
        - 50
        - 60
        - 70
        - 80
        - 90
        - 100
        - 110
        - 120
        - 140
        - 160
        - 170
        - 180
        - 190
        - 200
        - 210
        - 220
        - 230
        - 240
        - 250
        - 260
        - 270
        - 280
        - 290
        - 300
        - 320
        - 340
        - 360
        - 380
        - 400
        - 450
        - 500
        - 1000
      label: $p_T^{miss}$ [GeV]
      expression: objects['met'].pt
    npvs:
      type: Integer
      start: 0
      stop: 60
      label: npvs
      expression: events.PV.npvsGood
  layout:
    leading_electron:
      - leading_electron_pt
      - leading_electron_eta
    subleading_electron:
      - subleading_electron_pt
      - subleading_electron_eta
    electrons:
      - electron_pt
      - electron_eta
      - electron_phi
    dielectrons:
      - dielectron_pt
      - dielectron_mass
      - dielectron_dr
      - dielectron_deta
    jets:
      - jet_pt
      - jet_eta
      - jet_phi
    njets:
      - jet_multiplicity
    met:
      - met
    vertex:
      - npvs